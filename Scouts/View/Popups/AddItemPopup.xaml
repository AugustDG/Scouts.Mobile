<?xml version="1.0" encoding="utf-8"?>

<popup:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
                 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 xmlns:popup="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
                 xmlns:carousel="clr-namespace:CarouselView.FormsPlugin.Abstractions;assembly=CarouselView.FormsPlugin.Abstractions"
                 xmlns:segment="clr-namespace:SegmentedControl.FormsPlugin.Abstractions;assembly=SegmentedControl.FormsPlugin.Abstractions"
                 xmlns:image="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
                 xmlns:richtexteditor="clr-namespace:Syncfusion.XForms.RichTextEditor;assembly=Syncfusion.SfRichTextEditor.XForms"
                 xmlns:transformations="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
                 xmlns:material="clr-namespace:XF.Material.Forms.UI;assembly=XF.Material"
                 xmlns:syncLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
                 x:Class="Scouts.View.Popups.AddItemPopup"
                 BackgroundColor="{DynamicResource MainBackgroundColor}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.1*" />
            <RowDefinition Height="0.9*" />
        </Grid.RowDefinitions>

        <StackLayout Grid.Row="0" Grid.Column="0" Orientation="Horizontal"
                     Padding="10, 0"

                     BackgroundColor="{DynamicResource MainForegroundColor}">
            <Grid>
                <ImageButton Source="@drawable/back"
                             BackgroundColor="Transparent"
                             HeightRequest="45"

                             Command="{Binding CancelCommand}" />
            </Grid>
            <Label Text="NOUVEL ARTICLE"
                   TextColor="{DynamicResource SyncPrimaryForegroundColor}"
                   FontSize="25"

                   HorizontalOptions="CenterAndExpand"
                   VerticalTextAlignment="Center" />
            <ImageButton Source="@drawable/send"
                         HeightRequest="45"

                         Command="{Binding SubmitNewsCommand}"

                         BorderWidth="0"
                         BackgroundColor="Transparent" />
        </StackLayout>

        <carousel:CarouselViewControl Grid.Row="1"
                                      Orientation="Horizontal"
                                      ShowIndicators="true"
                                      InterPageSpacing="10"
                                      ShowArrows="False"
                                      ArrowsTransparency="0.4"
                                      ArrowsTintColor="{StaticResource SyncPrimaryColor}"
                                      Position="{Binding CarouselPosition}"

                                      VerticalOptions="FillAndExpand"
                                      Margin="10"

                                      CurrentPageIndicatorTintColor="{StaticResource SyncPrimaryColor}">
            <carousel:CarouselViewControl.ItemsSource>
                <x:Array Type="{x:Type StackLayout}">
                    <StackLayout HorizontalOptions="FillAndExpand"
                                 VerticalOptions="FillAndExpand">

                        <Frame Margin="15, 10"
                               Padding="0"
                               CornerRadius="7"
                               HasShadow="True"
                               BorderColor="Transparent"
                               BackgroundColor="{DynamicResource MainForegroundColor}">
                            <Grid>
                                <Button BackgroundColor="Transparent"
                                        CornerRadius="7"
                                        HeightRequest="150"
                                        Command="{Binding PickCommand}" />
                                <image:CachedImage Source="{Binding ButtonImage}"
                                                   Aspect="{Binding ImageAspect}"
                                                   DownsampleToViewSize="True"
                                                   BitmapOptimizations="True"
                                                   HeightRequest="150"
                                                   CacheDuration="30"
                                                   CacheType="All">
                                    <image:CachedImage.Transformations>
                                        <transformations:RoundedTransformation Radius="10" />
                                    </image:CachedImage.Transformations>
                                </image:CachedImage>
                            </Grid>
                        </Frame>

                        <Label Text="Public concerné"
                               Margin="5, 0, 5, -10" />
                        <Picker Title="Public concerné"
                                TitleColor="{DynamicResource SyncPrimaryForegroundColor}"
                                SelectedIndex="{Binding InfoPublicType}"
                                Margin="5, 0, 5, 10"

                                HorizontalOptions="FillAndExpand">
                            <Picker.ItemsSource>
                                <x:Array Type="{x:Type x:String}">
                                    <x:String>Chefs</x:String>
                                    <x:String>Clan</x:String>
                                    <x:String>Éclaireurs</x:String>
                                    <x:String>Guides</x:String>
                                    <x:String>Louvettes</x:String>
                                    <x:String>Louveteaux</x:String>
                                    <x:String>Castors</x:String>
                                    <x:String>Tous</x:String>
                                </x:Array>
                            </Picker.ItemsSource>
                        </Picker>

                        <Label Text="Type d'article"
                               Margin="5, 0, 5, 5" />
                        <segment:SegmentedControl TintColor="{StaticResource SyncPrimaryColor}"
                                                  SelectedSegment="{Binding InfoEventType}"
                                                  HorizontalOptions="FillAndExpand"

                                                  Margin="5, 0">
                            <segment:SegmentedControl.Children>
                                <segment:SegmentedControlOption Text="Camp" />
                                <segment:SegmentedControlOption Text="Réunion" />
                                <segment:SegmentedControlOption Text="Évènement" />
                                <segment:SegmentedControlOption Text="Infos" />
                            </segment:SegmentedControl.Children>
                        </segment:SegmentedControl>

                        <StackLayout Orientation="Horizontal">
                            <Label Text="Urgent?"
                                   FontSize="18"

                                   VerticalTextAlignment="Center"

                                   Margin="7, 10"
                                   TextColor="{DynamicResource SyncPrimaryForegroundColor}" />
                            <CheckBox IsChecked="{Binding Path=IsUrgent}"
                                      HorizontalOptions="EndAndExpand"

                                      Color="{DynamicResource SyncPrimaryForegroundColor}" />
                        </StackLayout>
                    </StackLayout>

                    <StackLayout>
                        <syncLayout:SfTextInputLayout ContainerType="Filled"
                                                      ReserveSpaceForAssistiveLabels="True"

                                                      EnableFloating="True"
                                                      Hint="Titre"

                                                      HasError="{Binding TitleHasError}"
                                                      ErrorText="{Binding TitleErrorMsg}"
                                                      ErrorColor="{StaticResource SyncErrorColor}"

                                                      BackgroundColor="Transparent">
                            <Entry Text="{Binding PostTitle}"
                                   TextColor="{DynamicResource SyncPrimaryForegroundColor}"

                                   BackgroundColor="{DynamicResource SecondaryForegroundColor}" />
                        </syncLayout:SfTextInputLayout>
                        
                        <syncLayout:SfTextInputLayout ContainerType="Filled"
                                                      VerticalOptions="FillAndExpand"
                                                      ReserveSpaceForAssistiveLabels="True"

                                                      EnableFloating="True"
                                                      Hint="Contenu"

                                                      HasError="{Binding ContentHasError}"
                                                      ErrorText="{Binding ContentErrorMsg}"
                                                      ErrorColor="{StaticResource SyncErrorColor}"

                                                      BackgroundColor="Transparent">
                            <Editor Text="{Binding PostContent}"

                                    TextColor="{DynamicResource SyncPrimaryForegroundColor}"

                                    PlaceholderColor="{DynamicResource SyncPrimaryForegroundColor}"

                                    BackgroundColor="{DynamicResource SecondaryForegroundColor}" />
                        </syncLayout:SfTextInputLayout>
                    </StackLayout>
                </x:Array>
            </carousel:CarouselViewControl.ItemsSource>
        </carousel:CarouselViewControl>
        <Frame Grid.Row="1"
               Padding="0"
               Margin="-10"
               IsVisible="{Binding IsBusy}"
               BackgroundColor="{DynamicResource MainBackgroundColor}">
            <ActivityIndicator IsRunning="True"

                               HorizontalOptions="CenterAndExpand"
                               VerticalOptions="CenterAndExpand" />

        </Frame>
    </Grid>
</popup:PopupPage>